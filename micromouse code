const int pushButton = 2;
const int leftMotorControl = 10;
const int rightMotorControl = 9;
const int pingPin = 7;
const int sonicSense = 8;
int onOffSteps = 0;
bool onOff = 0;

void setup()
{
  Serial.begin(9600);
  pinMode(pushButton, INPUT);
  pinMode(leftMotorControl, OUTPUT);
  pinMode(rightMotorControl, OUTPUT);
  pinMode(pingPin, OUTPUT);
  pinMode(sonicSense, INPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);
}

void loop()
{
  long duration, inches, cm;
  
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);

  duration = pulseIn(sonicSense, HIGH);

  inches = microsecondsToInches(duration);
  cm = microsecondsToCentimeters(duration);
  
  if (onOff == 1)
  {
    if (inches > 5 && inches < 60)
    {
      analogWrite(leftMotorControl, 200);
      analogWrite(rightMotorControl, 180);
      
    }
    else if (inches < 5 || inches > 60)
    {
      analogWrite(leftMotorControl, 150);
      analogWrite(rightMotorControl, 0);
    }
  }
  if (onOff == 0)
  {
    if (inches < 3)
    {
      onOffSteps = onOffSteps + 1;
    }
    else if (inches > 3)
    {
      onOffSteps = 0;
    }
    if (onOffSteps == 10)
    {
      digitalWrite(LED_BUILTIN, LOW);
      delay(333);
      digitalWrite(LED_BUILTIN, HIGH);
      delay(333);
      digitalWrite(LED_BUILTIN, LOW);
      delay(333);
      digitalWrite(LED_BUILTIN, HIGH);
      onOff = true;
      Serial.println("On");
    }
  }
  Serial.print(inches);
  if (onOff == 1)
  {
    Serial.println(" inches away");
  }
  if (onOff == 0)
  {
    Serial.print(" inches away, ");
    Serial.print(10 - onOffSteps);
    Serial.println(" steps from turning on");
  }
  delay(100);
}

long microsecondsToInches(long microseconds)
{
  return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds)
{
  return microseconds / 29 / 2;
}
